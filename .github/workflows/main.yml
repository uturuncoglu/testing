name: comptest
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule: # this is required to prevent auto-removing cache entries after 7-days
    - cron: '0 0 * * MON'
    - cron: '0 0 * * FRI'

jobs:
  create_environment:
    runs-on: ubuntu-latest
    
    env:
      INSTALL_DIR: $HOME/install
      
    steps:
      # checkout base repository
      - id: checkout-repo
        uses: actions/checkout@v3
        with:
          ref: main   
      
      # prepare core environment
      - id: load-env
        run: |
          sudo apt-get update
          sudo apt-get install unzip file gringo
          sudo apt-get install build-essential binutils-dev gfortran python-dev python-yaml ca-certificates
      
      # checkout spack to create build environment
      - id: checkout-spack
        uses: actions/checkout@v3
        with:
          repository: uturuncoglu/spack
          path: spack
          ref: hotfix/esmf

      # create build environment
      - id: create-env
        run: |
          . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
          spack -e ${{ github.workspace }} concretize -f
          
      # restore build environment from cache
      - id: restore-env
        uses: actions/cache@v2
        with:
          path: ~/.spack-ci
          key: ${{ hashFiles('**/spack.lock') }}
          restore-keys: |
            spack
            
      # create build environment
      - id: install-env
        run: |
          . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh 
          spack -e ${{ github.workspace }} install -j3
      
      # checkout data models
      - id: checkout-cdeps
        uses: actions/checkout@v3
        with:
          repository: uturuncoglu/CDEPS
          path: cdeps
          ref: hotfix/std_build      
      
      # build and install data models
      - id: install-cdeps
        run: |
          export PATH=$HOME/.spack-ci/view/bin:$PATH
          export ESMFMKFILE=$HOME/.spack-ci/view/lib/esmf.mk
          cd ${{ github.workspace }}/cdeps
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} \
            -DPIO_C_LIBRARY=$HOME/.spack-ci/view/lib \
            -DPIO_C_INCLUDE_DIR=$HOME/.spack-ci/view/include \
            -DPIO_Fortran_LIBRARY=$HOME/.spack-ci/view/lib \
            -DPIO_Fortran_INCLUDE_DIR=$HOME/.spack-ci/view/include \
            -DCMAKE_Fortran_FLAGS="-ffree-line-length-none -ffixed-line-length-none" ../
          make
          make install

      # checkout component
      - id: checkout-noahmp
        uses: actions/checkout@v3
        with:
          repository: NOAA-EMC/noahmp
          path: noahmp
          ref: feature/nuopc_cap
          
      # build and install component
      # need to install with openmp support since fms build with it
      # TODO: update fms in spack.yaml as fms~openmp to build it without openmp support 
      - id: install-noahmp
        run: |
          export PATH=$HOME/.spack-ci/view/bin:$PATH
          export ESMFMKFILE=$HOME/.spack-ci/view/lib/esmf.mk
          export NetCDF_ROOT=`nc-config --prefix`
          export FC=gfortran
          cd ${{ github.workspace }}/noahmp
          mkdir build
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} -DOPENMP=ON ../
          make
          make install

      # checkout generic driver
      - id: checkout-driver
        uses: actions/checkout@v3
        with:
          repository: uturuncoglu/GenericNUOPCDriver
          path: driver
          ref: main

      # build and install driver
      - id: install-driver
        run: |
          #ls -al ${{ github.workspace }}/driver
          #ls -al $HOME
          echo ${{ env.INSTALL_DIR }}
          export PATH=$HOME/.spack-ci/view/bin:$PATH
          export ESMFMKFILE=$HOME/.spack-ci/view/lib/esmf.mk
          export ATM_LIB_DIR=${{ env.INSTALL_DIR }}/lib
          export ATM_INC_DIR=${{ env.INSTALL_DIR }}/include
          export LND_LIB_DIR=${{ env.INSTALL_DIR }}/lib
          export LND_INC_DIR=${{ env.INSTALL_DIR }}/mod
          cd ${{ github.workspace }}/driver
          mkdir build
          cd build
          ls -al
          ls -al ../
          ls -al ${{ env.INSTALL_DIR }}/lib
          ls -al ${{ env.INSTALL_DIR }}/include
          ls -al ${{ env.INSTALL_DIR }}/mod
          pwd
          cmake --debug-output -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_DIR }} \ 
            -DPIO_C_LIBRARY=$HOME/.spack-ci/view/lib \
            -DPIO_C_INCLUDE_DIR=$HOME/.spack-ci/view/include \
            -DPIO_Fortran_LIBRARY=$HOME/.spack-ci/view/lib \
            -DPIO_Fortran_INCLUDE_DIR=$HOME/.spack-ci/view/include ../
          #make
          #make install
